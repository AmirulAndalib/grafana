// Code generated - EDITING IS FUTILE. DO NOT EDIT.
//
// Generated by:
//     public/app/plugins/gen.go
// Using jennies:
//     GoTypesJenny
//     PluginGoTypesJenny
//
// Run 'make gen-cue' from repository root to regenerate.

package models

// Defines values for DataQueryEditorMode.
const (
	DataQueryEditorModeBuilder DataQueryEditorMode = "builder"

	DataQueryEditorModeCode DataQueryEditorMode = "code"
)

// Defines values for QueryEditorMode.
const (
	QueryEditorModeBuilder QueryEditorMode = "builder"

	QueryEditorModeCode QueryEditorMode = "code"
)

// DataQuery defines model for DataQuery.
type DataQuery struct {
	// For mixed data sources the selected datasource is on the query level.
	// For non mixed scenarios this is undefined.
	// TODO find a better way to do this ^ that's friendly to schema
	// TODO this shouldn't be unknown but DataSourceRef | null
	Datasource *interface{} `json:"datasource,omitempty"`

	// Code or Builder mode
	EditorMode *DataQueryEditorMode `json:"editorMode,omitempty"`
	Exemplar   *bool                `json:"exemplar,omitempty"`
	Expr       string               `json:"expr"`
	Format     *string              `json:"format,omitempty"`

	// true if query is disabled (ie should not be returned to the dashboard)
	Hide           *bool   `json:"hide,omitempty"`
	Hinting        *bool   `json:"hinting,omitempty"`
	Instant        *bool   `json:"instant,omitempty"`
	Interval       *string `json:"interval,omitempty"`
	IntervalFactor *int64  `json:"intervalFactor,omitempty"`
	IntervalMs     *int64  `json:"intervalMs,omitempty"`

	// Unique, guid like, string used in explore mode
	Key          *string `json:"key,omitempty"`
	LegendFormat *string `json:"legendFormat,omitempty"`

	// Specify the query flavor
	// TODO make this required and give it a default
	QueryType *string `json:"queryType,omitempty"`
	Range     *bool   `json:"range,omitempty"`

	// A - Z
	RefId        string  `json:"refId"`
	RequestId    *string `json:"requestId,omitempty"`
	ShowingGraph *bool   `json:"showingGraph,omitempty"`
	ShowingTable *bool   `json:"showingTable,omitempty"`

	// Timezone offset to align start & end time on backend
	UtcOffsetSec   *int64 `json:"utcOffsetSec,omitempty"`
	ValueWithRefId *bool  `json:"valueWithRefId,omitempty"`
}

// Code or Builder mode
type DataQueryEditorMode string

// QueryEditorMode defines model for QueryEditorMode.
type QueryEditorMode string
